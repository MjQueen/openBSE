{"version":3,"sources":["node_modules/browser-pack/_prelude.js","build.json","src/app.js","src/browserNotSupportError.js","src/buildDate.json","src/bulletScreenEngine.js","src/bulletScreenType.js","src/lib/event.js","src/lib/helper.js","src/lib/linkedList.js","src/lib/renderers/baseRenderer.js","src/lib/renderers/canvasBaseRenderer.js","src/lib/renderers/canvasRenderer.js","src/lib/renderers/css3Renderer.js","src/lib/renderers/renderersFactory.js","src/lib/renderers/svgRenderer.js","src/lib/renderers/webglRenderer.js","src/openBSE.js"],"names":[],"mappings":"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","file":"openBSE.all.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\r\n    \"version\": \"2.0-Beta\",\r\n    \"home\": \"https://iamscottxu.github.io/openBSE/\",\r\n    \"name\": \"openBSE\",\r\n    \"description\": \"openBSE is a high-performance JavaScript bullet-screen (danmaku) engine.\"\r\n}","window.openBSE = require('./openBSE').openBSE;","/** \r\n * 浏览器不支持所引发的错误\r\n * @deprecated 浏览器不支持所引发的错误。有关基类的详细信息，请参阅 MDN [Error]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Error} 。\r\n * @alias openBSE.BrowserNotSupportError\r\n * @extends Error\r\n */\r\nclass BrowserNotSupportError extends Error {\r\n    /**\r\n     * 创建一个异常对象\r\n     * @param {string} message - 消息\r\n     */\r\n    constructor(message) {\r\n        super(`This browser does not support \"${message}\".`);\r\n        this.name = \"BrowserNotSupportError\";\r\n    }\r\n}\r\n\r\nexport { BrowserNotSupportError }","module.exports={\"buildDate\":\"Sat, 12 Jan 2019 05:28:57 GMT\"}","import { LinkedList } from './lib/linkedList'\r\nimport { Event } from './lib/event'\r\nimport { RenderersFactory } from './lib/renderers/renderersFactory'\r\nimport { BulletScreenType } from './bulletScreenType'\r\nimport { Helper } from './lib/helper'\r\n\r\nconst BUILD = require('../build.json');\r\nBUILD.buildDate = require('./buildDate.json').buildDate;\r\n\r\n/** \r\n * 弹幕引擎对象类 \r\n * @alias openBSE.BulletScreenEngine\r\n * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误。\r\n * @throws {TypeError} 传入的参数错误时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n */\r\nclass BulletScreenEngine {\r\n    /**\r\n     * 创建一个弹幕引擎对象。\r\n     * @param {Element} element - 要加载弹幕的元素：有关 Element 接口的信息请参阅MDN [Element]{@link https://developer.mozilla.org/zh-CN/docs/Web/API/Element} 。\r\n     * @param {openBSE~Options} [_options] - 全局选项：一个 {@link openBSE~Options} 结构。\r\n     * @param {string} [renderMode=\"canvas\"] - 渲染模式：默认为“canvas”, “可选css3”， “webgl”和“svg”。\r\n     */\r\n    constructor(element, options, renderMode = 'canvas') {\r\n        //变量初始化\r\n        /**\r\n         * 开始时间\r\n         * @private @type {number}\r\n         */\r\n        let _startTime;\r\n        /**\r\n         * 暂停时间\r\n         * @private @type {number}\r\n         */\r\n        let _pauseTime = 0;\r\n        /**\r\n         * 剩余弹幕\r\n         * @private @type {LinkedList}\r\n         */\r\n        let _bulletScreens = new LinkedList();\r\n        /**\r\n         * 屏幕上的弹幕\r\n         * @private @type {LinkedList}\r\n         */\r\n        let _bulletScreensOnScreen = new LinkedList();\r\n        /**\r\n         * 延迟弹幕总数\r\n         * @private @type {number}\r\n         */\r\n        let _delayBulletScreensCount = 0;\r\n        /**\r\n         * 延迟（单位：毫秒）\r\n         * @private @type {number}\r\n         */\r\n        let _delay = 0;\r\n        /**\r\n         * 播放标志\r\n         * @private @type {boolean}\r\n         */\r\n        let _playing;\r\n        /**\r\n         * 刷新频率\r\n         * @private @type {number}\r\n         */\r\n        let _refreshRate = 0.06; //初始刷新频率\r\n        /**\r\n         * 上一次刷新时间\r\n         * @private @type {number}\r\n         */\r\n        let _lastRefreshTime;\r\n        /**\r\n         * 全局选项\r\n         * @private @type {openBSE~Options}\r\n         */\r\n        let _options;\r\n        /**\r\n         * 默认全局变量\r\n         * @private @readonly\r\n         */\r\n        const _defaultOptions = {\r\n            /** 垂直间距 */\r\n            verticalInterval: 8,\r\n            /** 播放速度(倍数) */\r\n            playSpeed: 1,\r\n            /** 时间基准 */\r\n            clock: time => new Date().getTime() - _startTime,\r\n            /** 缩放比例 */\r\n            scaling: 1,\r\n            /** 超时丢弃 */\r\n            timeOutDiscard: true,\r\n            /** 要隐藏的弹幕类型 */\r\n            hiddenTypes: 0,\r\n            /** 弹幕不透明度 */\r\n            opacity: 1,\r\n            /** 默认弹幕样式 */\r\n            defaultStyle: {\r\n                /** 阴影的模糊级别，0为不显示阴影 */\r\n                shadowBlur: 2,\r\n                /** 字体粗细 */\r\n                fontWeight: '600',\r\n                /** 字体系列 */\r\n                fontFamily: 'sans-serif',\r\n                /** 字体大小（单位：像素） */\r\n                size: 19,\r\n                /** 外框颜色 */\r\n                boxColor: null,\r\n                /** 字体颜色 */\r\n                color: 'white',\r\n                /** 描边颜色 */\r\n                borderColor: null,\r\n                /** 弹幕速度（单位：像素/毫秒） 仅流弹幕类型有效 */\r\n                speed: 0.15,\r\n                /** 弹幕停留时间 仅固定弹幕类型有效 */\r\n                residenceTime: 5000\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 全局选项类型\r\n         * @private @readonly\r\n         */\r\n        const _optionsType = {\r\n            verticalInterval: 'number',\r\n            playSpeed: 'number',\r\n            clock: 'function',\r\n            scaling: 'number',\r\n            timeOutDiscard: 'boolean',\r\n            hiddenTypes: 'number',\r\n            opacity: 'number',\r\n            defaultStyle: {\r\n                shadowBlur: 'number',\r\n                fontWeight: ['string', 'number'],\r\n                fontFamily: 'string',\r\n                size: 'number',\r\n                boxColor: ['string', 'null'],\r\n                color: 'string',\r\n                borderColor: ['string', 'null'],\r\n                speed: 'number',\r\n                residenceTime: 'number'\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 默认弹幕数据\r\n         * @private @readonly\r\n         */\r\n        const _defaultBulletScreen = {\r\n            /** 弹幕文本 */\r\n            text: null,\r\n            /** 是否允许丢弃 */\r\n            canDiscard: true,\r\n            /** 弹幕进入时间 */\r\n            startTime: null,\r\n            /** 弹幕类型 */\r\n            type: BulletScreenType.rightToLeft\r\n        }\r\n\r\n        /**\r\n         * 弹幕数据类型\r\n         * @private @readonly\r\n         */\r\n        const _bulletScreenType = {\r\n            text: 'string',\r\n            canDiscard: 'boolean',\r\n            startTime: 'number',\r\n            type: 'number'\r\n        }\r\n\r\n        _options = Helper.setValues(options, _defaultOptions, _optionsType); //设置默认值\r\n\r\n        //事件初始化\r\n        let _event = new Event();\r\n        /**\r\n         * 弹幕单击事件。当单击弹幕时触发。\r\n         * @event openBSE.BulletScreenEngine#click\r\n         * @param {openBSE~BulletScreen} e.bulletScreen - 被单击的弹幕的数据：一个 {@link openBSE~BulletScreen} 结构。（注意：不要试图与[添加弹幕]{@link openBSE.BulletScreenEngine#addBulletScreen}时创建的对象进行比较，这个对象是克隆得到的，并不相等。正确的方法是在添加弹幕时一并插入 id 等自定义字段来唯一标识一条弹幕。）\r\n         */\r\n        _event.add('click');\r\n        /**\r\n         * 弹幕上下文菜单事件。当触发弹幕上下文菜单时触发。\r\n         * @event openBSE.BulletScreenEngine#contextmenu\r\n         * @param {openBSE~BulletScreen} e.bulletScreen - 被单击的弹幕的数据：一个 {@link openBSE~BulletScreen} 结构。（注意：不要试图与[添加弹幕]{@link openBSE.BulletScreenEngine#addBulletScreen}时创建的对象进行比较，这个对象是克隆得到的，并不相等。正确的方法是在添加弹幕时一并插入 id 等自定义字段来唯一标识一条弹幕。）\r\n         */\r\n        _event.add('contextmenu');\r\n        /**\r\n         * 绑定事件处理程序\r\n         * @function\r\n         * @description 绑定事件处理程序。当事件处理程序返回值为 false 时停止冒泡。\r\n         * @param {string} name - 事件名称\r\n         * @param {function} fun - 事件处理程序\r\n         * @listens openBSE.BulletScreenEngine#click\r\n         * @listens openBSE.BulletScreenEngine#contextmenu\r\n         * @throws {TypeError} 传入的参数错误或事件不存在时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.bind = _event.bind;\r\n        /**\r\n         * 解绑事件处理程序（fun为空解绑所有事件处理程序）\r\n         * @function\r\n         * @param {string} name - 事件名称\r\n         * @param {function} fun - 事件处理程序\r\n         * @throws {TypeError} 传入的参数错误或事件不存在时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.unbind = _event.unbind;\r\n        //初始化\r\n        let _elementSize = {\r\n            width: element.clientWidth / _options.scaling,\r\n            height: element.clientHeight / _options.scaling\r\n        }\r\n        let _oldDevicePixelRatio = window.devicePixelRatio;\r\n        let _oldScaling = _options.scaling;\r\n        let _oldClientWidth = element.clientWidth;\r\n        let _oldClientHeight = element.clientHeight;\r\n        let _oldHiddenTypes = _options.hiddenTypes;\r\n        let _oldOpacity = _options.opacity;\r\n        //渲染器工厂\r\n        let renderersFactory = new RenderersFactory(element, _options, _elementSize, _event, _bulletScreensOnScreen);\r\n        let _renderer = renderersFactory.getRenderer(renderMode); //实例化渲染器\r\n        setInterval(setSize, 100);\r\n\r\n        //公共函数\r\n\r\n        /**\r\n         * 设置全局选项\r\n         * @param {openBSE~Options} options - 全局选项：一个 {@link openBSE~Options} 结构。\r\n         * @throws {TypeError} 传入的参数错误时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.setOptions = function (options) {\r\n            _options = Helper.setValues(options, _options, _optionsType, false); //设置默认值\r\n            if (_oldHiddenTypes != _options.hiddenTypes) {\r\n                _oldHiddenTypes = _options.hiddenTypes;\r\n                if (!_playing) _renderer.draw(); //非播放状态则重绘\r\n            }\r\n            if ( _oldOpacity != _options.opacity) {\r\n                _oldOpacity = _options.opacity;\r\n                _renderer.setOpacity();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 获取全局选项\r\n         * @returns {openBSE~Options} 全局选项：一个 {@link openBSE~Options} 结构。\r\n         */\r\n        this.getOptions = () => _options;\r\n\r\n        /**\r\n         * 添加弹幕到弹幕列表。\r\n         * @description 添加弹幕到弹幕列表。由于弹幕在屏幕上出现过后，弹幕引擎将从列表中彻底删除此弹幕。所以，在改变播放进度时，可能需要先[清空弹幕列表]{@link openBSE.BulletScreenEngine#cleanBulletScreenList}，然后重新加载此播放进度以后的弹幕。\r\n         * @param {openBSE~BulletScreen} bulletScreen - 单条弹幕数据：一个 {@link openBSE~BulletScreen} 结构。\r\n         * @throws {TypeError} 传入的参数错误时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.addBulletScreen = function (bulletScreen) {\r\n            _defaultBulletScreen.startTime = _options.clock();\r\n            bulletScreen = Helper.setValues(bulletScreen, _defaultBulletScreen, _bulletScreenType); //设置默认值\r\n\r\n            if (\r\n                bulletScreen.type != BulletScreenType.leftToRight &&\r\n                bulletScreen.type != BulletScreenType.rightToLeft &&\r\n                bulletScreen.type != BulletScreenType.top &&\r\n                bulletScreen.type != BulletScreenType.bottom\r\n            ) throw new TypeError(Helper.PARAMETERS_TYPE_ERROR);\r\n\r\n            Helper.checkTypes(bulletScreen.style, _optionsType.defaultStyle); //检查弹幕样式类型\r\n\r\n            let oldLength = _bulletScreens.getLength();\r\n            _bulletScreens.forEach(function (lastBulletScreen) {\r\n                if (bulletScreen.startTime > lastBulletScreen.startTime)\r\n                    return {\r\n                        add: {\r\n                            addToUp: true,\r\n                            element: bulletScreen\r\n                        },\r\n                        stop: true\r\n                    };\r\n            }, true);\r\n            if (oldLength === _bulletScreens.getLength())\r\n                _bulletScreens.push(bulletScreen, false);\r\n\r\n        };\r\n\r\n        /**\r\n         * 开始播放弹幕。\r\n         */\r\n        this.play = function () {\r\n            if (!_playing) {\r\n                if (!_startTime)\r\n                    _startTime = new Date().getTime();\r\n                if (_pauseTime)\r\n                    _startTime += _options.clock() - _pauseTime;\r\n                _lastRefreshTime = null;\r\n                _playing = true;\r\n                requestAnimationFrame(refresh);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 暂停播放弹幕。\r\n         * @description 暂停播放弹幕。暂停播放弹幕是指弹幕播放暂停，所有未出现的弹幕将停止出现，已出现的弹幕停止运动，停止消失。\r\n         */\r\n        this.pause = function () {\r\n            if (_playing) {\r\n                _pauseTime = _options.clock();\r\n                _playing = false;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * 清空弹幕列表。\r\n         * @description 清空弹幕列表，但屏幕上已经出现的弹幕不会被清除。\r\n         */\r\n        this.cleanBulletScreenList = function () {\r\n            _bulletScreens.clean();\r\n        };\r\n\r\n        /**\r\n         * 清空屏幕内容。\r\n         * @description 清空屏幕内容。清空屏幕上已经出现的弹幕，不包括弹幕列表中的弹幕。\r\n         */\r\n        this.cleanScreen = function () {\r\n            _bulletScreensOnScreen.clean();\r\n            _renderer.cleanScreen();\r\n        };\r\n\r\n        /**\r\n         * 停止播放弹幕。\r\n         * @description 停止播放弹幕。停止播放弹幕是指停止播放弹幕，默认[时间基准（options.clock）]{@link openBSE~BulletScreenStyle}归零，并[清空弹幕列表]{@link openBSE.BulletScreenEngine#cleanBulletScreenList}、[清空屏幕弹幕]{@link openBSE.BulletScreenEngine#cleanBulletScreenListOnScreen}。\r\n         */\r\n        this.stop = function () {\r\n            if (_playing) {\r\n                this.pause();\r\n            }\r\n            this.cleanBulletScreenList();\r\n            this.cleanBulletScreenListOnScreen();\r\n            _pauseTime = 0;\r\n            _startTime = null;\r\n        };\r\n\r\n        /**\r\n         * 隐藏弹幕。\r\n         * @function\r\n         */\r\n        this.hide = _renderer.hide;\r\n\r\n        /**\r\n         * 显示弹幕。\r\n         * @function\r\n         */\r\n        this.show = _renderer.show;\r\n\r\n        /**\r\n         * 获取弹幕可见性。\r\n         * @function\r\n         * @returns {boolean} - 指示弹幕是否可见。\r\n         * @description 获取弹幕可见性。如要显示弹幕请调用 [bulletScreenEngine.show();]{@link openBSE.BulletScreenEngine#show} ，要隐藏弹幕请调用 [bulletScreenEngine.hide();]{@link openBSE.BulletScreenEngine#hide} 。\r\n         */\r\n        this.getVisibility = _renderer.getVisibility;\r\n        /**\r\n         * 获取渲染模式。\r\n         * @returns {string} - 弹幕渲染模式： 取值为“canvas”、“css3”、“webgl”或“svg”。\r\n         */\r\n        this.getRenderMode = () => renderMode;\r\n\r\n        /**\r\n         * 获取播放状态。\r\n         * @returns {boolean} - 正在播放标志：true：正在播放；false：已暂停/停止播放。\r\n         */\r\n        this.getPlayState = () => _playing;\r\n\r\n        /**\r\n        * 获取调试信息。\r\n        * @returns {openBSE~DebugInfo} - 调试信息：一个 {@link openBSE~DebugInfo} 结构。\r\n        */\r\n        this.getDebugInfo = function () {\r\n            return {\r\n                time: _playing ? _options.clock() : _pauseTime,\r\n                bulletScreensOnScreenCount: _bulletScreensOnScreen.getLength(),\r\n                bulletScreensCount: _bulletScreens.getLength(),\r\n                delay: _delay,\r\n                delayBulletScreensCount: _delayBulletScreensCount,\r\n                fps: _playing ? Math.floor(_refreshRate * 1000) : 0 //帧频\r\n            };\r\n        };\r\n\r\n        //内部函数\r\n\r\n        /**\r\n         * 刷新弹幕函数\r\n         * @private\r\n         */\r\n        function refresh() {\r\n            let nowTime = new Date().getTime();\r\n            if (_lastRefreshTime != null)\r\n                _refreshRate = 1 / (nowTime - _lastRefreshTime);\r\n            _lastRefreshTime = nowTime;\r\n            addBulletScreensToScreen();\r\n            moveBulletScreenOnScreen();\r\n            _renderer.draw(); //绘制弹幕\r\n            if (_playing)\r\n                requestAnimationFrame(refresh);\r\n        }\r\n\r\n        /**\r\n         * 移动弹幕函数\r\n         * @private\r\n         */\r\n        function moveBulletScreenOnScreen() {\r\n            _bulletScreensOnScreen.forEach((bulletScreenOnScreen) => {\r\n                let nowTime = _options.clock();\r\n                switch (bulletScreenOnScreen.bulletScreen.type) {\r\n                    case BulletScreenType.rightToLeft:\r\n                        if (bulletScreenOnScreen.x > -bulletScreenOnScreen.width) {\r\n                            bulletScreenOnScreen.x -= bulletScreenOnScreen.bulletScreen.style.speed * _options.playSpeed / _refreshRate;\r\n                        }\r\n                        else {\r\n                            _renderer.delete(bulletScreenOnScreen);\r\n                            return { remove: true };\r\n                        }\r\n                        break;\r\n                    case BulletScreenType.leftToRight:\r\n                        if (bulletScreenOnScreen.x < _elementSize.width) {\r\n                            bulletScreenOnScreen.x += bulletScreenOnScreen.bulletScreen.style.speed * _options.playSpeed / _refreshRate;\r\n                        }\r\n                        else {\r\n                            _renderer.delete(bulletScreenOnScreen);\r\n                            return { remove: true };\r\n                        }\r\n                        break;\r\n                    case BulletScreenType.top:\r\n                    case BulletScreenType.bottom:\r\n                        if (bulletScreenOnScreen.endTime < nowTime) {\r\n                            _renderer.delete(bulletScreenOnScreen);\r\n                            return { remove: true };\r\n                        }\r\n                        break;\r\n                }\r\n            }, true);\r\n        }\r\n\r\n        /**\r\n         * 添加弹幕到屏幕函数\r\n         * @private\r\n         */\r\n        function addBulletScreensToScreen() {\r\n            if (_bulletScreensOnScreen.getLength() === 0)\r\n                _delay = 0;\r\n            let times = Math.floor(_refreshRate * 2000);\r\n            do {\r\n                let bulletScreen = _bulletScreens.pop(false, false);\r\n                if (bulletScreen === null)\r\n                    return;\r\n                let nowTime = _options.clock();\r\n                if (bulletScreen.startTime > nowTime)\r\n                    return;\r\n                if (!_options.timeOutDiscard || !bulletScreen.canDiscard || bulletScreen.startTime > nowTime - Math.floor(1 / _refreshRate) * 60) {\r\n                    bulletScreen.style = Helper.setValues(bulletScreen.style, _options.defaultStyle, _optionsType.defaultStyle); //填充默认样式\r\n                    getBulletScreenOnScreen(nowTime, bulletScreen); //生成屏幕弹幕对象并添加到屏幕弹幕集合\r\n                }\r\n                else\r\n                    _delayBulletScreensCount++;\r\n                _bulletScreens.pop(true, false);\r\n                times--;\r\n            } while (_bulletScreensOnScreen.getLength() === 0 || times > 0);\r\n        }\r\n\r\n        /**\r\n         * 生成屏幕弹幕对象函数\r\n         * @private\r\n         * @param {number} nowTime - 当前时间\r\n         * @param {openBSE~BulletScreen} bulletScreen - 弹幕\r\n         */\r\n        function getBulletScreenOnScreen(nowTime, bulletScreen) {\r\n            _delay = nowTime - bulletScreen.startTime;\r\n            let bulletScreenOnScreen = {};\r\n            bulletScreenOnScreen.bulletScreen = bulletScreen;\r\n            bulletScreenOnScreen.startTime = nowTime; //弹幕头部进屏幕时间\r\n            bulletScreenOnScreen.size = bulletScreenOnScreen.bulletScreen.style.size;\r\n            bulletScreenOnScreen.height = bulletScreenOnScreen.size; //弹幕的高度：像素\r\n            _renderer.creatAndgetWidth(bulletScreenOnScreen); //创建弹幕元素并计算宽度\r\n            switch (bulletScreen.type) {\r\n                case BulletScreenType.rightToLeft:\r\n                    bulletScreenOnScreen.endTime = parseInt(nowTime + (_elementSize.width + bulletScreenOnScreen.width) / (bulletScreen.style.speed * _options.playSpeed)); //弹幕尾部出屏幕的时间\r\n                    bulletScreenOnScreen.x = _elementSize.width; //弹幕初始X坐标\r\n                    bulletScreenOnScreen.y = _options.verticalInterval; //弹幕初始Y坐标\r\n                    break;\r\n                case BulletScreenType.leftToRight:\r\n                    bulletScreenOnScreen.endTime = parseInt(nowTime + (_elementSize.width + bulletScreenOnScreen.width) / (bulletScreen.style.speed * _options.playSpeed)); //弹幕尾部出屏幕的时间\r\n                    bulletScreenOnScreen.x = -bulletScreenOnScreen.width; //弹幕初始X坐标\r\n                    bulletScreenOnScreen.y = _options.verticalInterval; //弹幕初始Y坐标\r\n                    break;\r\n                case BulletScreenType.top:\r\n                    bulletScreenOnScreen.endTime = bulletScreenOnScreen.startTime + bulletScreen.style.residenceTime * _options.playSpeed;\r\n                    bulletScreenOnScreen.x = parseInt((_elementSize.width - bulletScreenOnScreen.width) / 2); //弹幕初始X坐标\r\n                    bulletScreenOnScreen.y = _options.verticalInterval; //弹幕初始Y坐标\r\n                    break;\r\n                case BulletScreenType.bottom:\r\n                    bulletScreenOnScreen.endTime = bulletScreenOnScreen.startTime + bulletScreen.style.residenceTime * _options.playSpeed;\r\n                    bulletScreenOnScreen.x = parseInt((_elementSize.width - bulletScreenOnScreen.width) / 2); //弹幕初始X坐标\r\n                    bulletScreenOnScreen.y = -_options.verticalInterval - bulletScreenOnScreen.height; //弹幕初始Y坐标\r\n                    break;\r\n            }\r\n            let oldLength = _bulletScreensOnScreen.getLength();\r\n            if (bulletScreen.type === BulletScreenType.top || bulletScreen.type === BulletScreenType.bottom) {\r\n                _bulletScreensOnScreen.forEach((nextBulletScreenOnScreen) => {\r\n                    //弹幕不在流中，是固定弹幕\r\n                    if (nextBulletScreenOnScreen.bulletScreen.type != bulletScreen.type)\r\n                        return; //不是同一种类型的弹幕\r\n                    if (bulletScreen.type === BulletScreenType.top) {\r\n                        //如果新弹幕在当前弹幕上方且未与当前弹幕重叠\r\n                        if (bulletScreenOnScreen.y + bulletScreenOnScreen.height < nextBulletScreenOnScreen.y)\r\n                            return { add: { addToUp: true, element: setActualY(bulletScreenOnScreen) }, stop: true };\r\n                        //如果上一条弹幕的消失时间小于当前弹幕的出现时间\r\n                        if (nextBulletScreenOnScreen.endTime < nowTime)\r\n                            bulletScreenOnScreen.y = nextBulletScreenOnScreen.y;\r\n                        else\r\n                            bulletScreenOnScreen.y = nextBulletScreenOnScreen.y + nextBulletScreenOnScreen.height + _options.verticalInterval;\r\n                    }\r\n                    else {\r\n                        //如果新弹幕在当前弹幕下方且未与当前弹幕重叠\r\n                        if (bulletScreenOnScreen.y > nextBulletScreenOnScreen.y + nextBulletScreenOnScreen.height) {\r\n                            return { add: { addToUp: true, element: setActualY(bulletScreenOnScreen) }, stop: true };\r\n                        }\r\n                        //如果上一条弹幕的消失时间小于当前弹幕的出现时间\r\n                        if (nextBulletScreenOnScreen.endTime < nowTime)\r\n                            bulletScreenOnScreen.y = nextBulletScreenOnScreen.y;\r\n                        else\r\n                            bulletScreenOnScreen.y = nextBulletScreenOnScreen.y - bulletScreenOnScreen.height - _options.verticalInterval;\r\n                    }\r\n                }, true);\r\n            }\r\n            else {\r\n                //当前弹幕经过一个点需要的总时长\r\n                let bulletScreenOnScreenWidthTime = bulletScreenOnScreen.width / (bulletScreen.style.speed * _options.playSpeed);\r\n                _bulletScreensOnScreen.forEach((nextBulletScreenOnScreen) => {\r\n                    //弹幕在流中，是移动弹幕\r\n                    if (nextBulletScreenOnScreen.bulletScreen.type === BulletScreenType.top || nextBulletScreenOnScreen.bulletScreen.type === BulletScreenType.bottom)\r\n                        return; //弹幕不在流中，为固定弹幕\r\n                    //如果新弹幕在当前弹幕上方且未与当前弹幕重叠\r\n                    if (bulletScreenOnScreen.y + bulletScreenOnScreen.height < nextBulletScreenOnScreen.y)\r\n                        return { add: { addToUp: true, element: setActualY(bulletScreenOnScreen) }, stop: true };\r\n                    //上一条弹幕经过一个点需要的总时长\r\n                    let nextBulletScreenOnScreenWidthTime = nextBulletScreenOnScreen.width / (nextBulletScreenOnScreen.bulletScreen.style.speed * _options.playSpeed);\r\n                    //如果上一条弹幕的消失时间小于当前弹幕的出现时间\r\n                    if (nextBulletScreenOnScreen.startTime + nextBulletScreenOnScreenWidthTime >= nowTime || //如果上一条弹幕的头进入了，但是尾还没进入\r\n                        nextBulletScreenOnScreen.endTime >= bulletScreenOnScreen.endTime - bulletScreenOnScreenWidthTime) //如果当前弹幕头出去了，上一条弹幕尾还没出去\r\n                        bulletScreenOnScreen.y = nextBulletScreenOnScreen.y + nextBulletScreenOnScreen.height + _options.verticalInterval;\r\n                    else\r\n                        bulletScreenOnScreen.y = nextBulletScreenOnScreen.y;\r\n                }, true);\r\n            }\r\n            if (_bulletScreensOnScreen.getLength() === oldLength)\r\n                _bulletScreensOnScreen.push(setActualY(bulletScreenOnScreen), false);\r\n        }\r\n\r\n        /**\r\n         * 设置真实的Y坐标\r\n         * @private\r\n         * @param {object} bulletScreenOnScreen - 屏幕弹幕事件\r\n         * @returns {object} 屏幕弹幕事件\r\n         */\r\n        function setActualY(bulletScreenOnScreen) {\r\n            let bulletScreen = bulletScreenOnScreen.bulletScreen;\r\n            if (\r\n                bulletScreen.type === BulletScreenType.leftToRight ||\r\n                bulletScreen.type === BulletScreenType.rightToLeft ||\r\n                bulletScreen.type === BulletScreenType.top\r\n            ) {\r\n                bulletScreenOnScreen.actualY = bulletScreenOnScreen.y % (_elementSize.height - bulletScreenOnScreen.height);\r\n            }\r\n            else if (bulletScreen.type === BulletScreenType.bottom) {\r\n                bulletScreenOnScreen.actualY = _elementSize.height + bulletScreenOnScreen.y % _elementSize.height;\r\n            }\r\n            return bulletScreenOnScreen;\r\n        }\r\n\r\n        /**\r\n         * 设置尺寸\r\n         * @private\r\n         */\r\n        function setSize() {\r\n            if (_oldDevicePixelRatio != window.devicePixelRatio ||\r\n                _oldClientWidth != element.clientWidth ||\r\n                _oldClientHeight != element.clientHeight ||\r\n                _oldScaling != _options.scaling) {\r\n                _oldScaling = _options.scaling;\r\n                _elementSize.width = element.clientWidth / _options.scaling;\r\n                _elementSize.height = element.clientHeight / _options.scaling;\r\n                _oldClientWidth = element.clientWidth;\r\n                _oldClientHeight = element.clientHeight;\r\n                _oldDevicePixelRatio = window.devicePixelRatio;\r\n                _renderer.setSize();\r\n                if (!_playing) _renderer.draw(); //非播放状态则重绘\r\n            }\r\n        }\r\n\r\n        console.info(\r\n            '%c%s%c now loaded.\\n\\n%cVersion: %s\\nBuild Date: %s\\n\\n%c%s\\nHome: %s',\r\n            'font-weight:bold; color:#0099FF;', BUILD.name, '', 'font-style:italic;',\r\n            BUILD.version, BUILD.buildDate, '', BUILD.description, BUILD.home\r\n        );\r\n    }\r\n}\r\nexport { BulletScreenEngine }","/**\r\n * 弹幕类型枚举\r\n * @alias openBSE.BulletScreenType\r\n * @readonly\r\n * @enum {number}\r\n */\r\nconst BulletScreenType = {\r\n    /** \r\n     * 从右到左弹幕\r\n     * @readonly\r\n     */\r\n    rightToLeft: 1,\r\n    /** \r\n     * 从左到右弹幕（逆向弹幕）\r\n     * @readonly\r\n     */\r\n    leftToRight: 2,\r\n    /** \r\n     * 顶部弹幕\r\n     * @readonly\r\n     */\r\n    top: 4,\r\n    /** \r\n     * 底部弹幕\r\n     * @readonly\r\n     */\r\n    bottom: 8\r\n}\r\n\r\nexport { BulletScreenType }","import { Helper } from './helper'\r\n\r\nconst EVENT_NAME_NOT_FOUND = 'Event name not found.'\r\nconst EVENT_ALREADY_EXISTS = 'Event already exists.'\r\n\r\n/**\r\n * 事件模型类\r\n */\r\nclass Event {\r\n    /**\r\n     * 创建一个新的事件模型。\r\n     */\r\n    constructor() {\r\n        /**\r\n         * 事件列表\r\n         * @private\r\n         */\r\n        let eventList = {};\r\n        /**\r\n         * 添加事件\r\n         * @public\r\n         * @param {string} name - 事件名称\r\n         * @throws {TypeError} 传入的参数错误或事件已存在时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.add = function (name) {\r\n            if (typeof name != 'string') throw new TypeError(Helper.PARAMETERS_TYPE_ERROR);\r\n            if (typeof eventList[name] != 'undefined') throw new TypeError(EVENT_ALREADY_EXISTS);\r\n            eventList[name] = [];\r\n        };\r\n        /**\r\n         * 删除事件\r\n         * @public\r\n         * @param {string} name - 事件名称\r\n         * @throws {TypeError} 传入的参数错误或事件不存在时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.remove = function (name) {\r\n            if (typeof name != 'string') throw new TypeError(Helper.PARAMETERS_TYPE_ERROR);\r\n            if (typeof eventList[name] === 'undefined') throw new TypeError(EVENT_NAME_NOT_FOUND);\r\n            delete (eventList[name]);\r\n        };\r\n        /**\r\n         * 绑定事件处理程序\r\n         * @public\r\n         * @param {string} name - 事件名称\r\n         * @param {function} fun - 事件处理程序\r\n         * @returns {number} 添加后的事件数\r\n         * @throws {TypeError} 传入的参数错误或事件不存在时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.bind = function (name, fun) {\r\n            if (typeof name != 'string' || typeof fun != 'function') throw new TypeError(Helper.PARAMETERS_TYPE_ERROR);\r\n            let event = eventList[name];\r\n            if (typeof event === 'undefined') throw new TypeError(EVENT_NAME_NOT_FOUND);\r\n            for (let index in event) {\r\n                if (event[index] === fun)\r\n                    return false;\r\n            }\r\n            return event.push(fun);\r\n        };\r\n        /**\r\n         * 解绑事件处理程序（fun为空解绑所有事件处理程序）\r\n         * @public\r\n         * @param {string} name - 事件名称\r\n         * @param {function} fun - 事件处理程序\r\n         * @returns {number} 删除后的事件数\r\n         * @throws {TypeError} 传入的参数错误或事件不存在时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.unbind = function (name, fun) {\r\n            if (typeof name != 'string' || typeof fun != 'function') throw new TypeError(Helper.PARAMETERS_TYPE_ERROR);\r\n            let event = eventList[name];\r\n            if (typeof event === 'undefined') throw new TypeError(EVENT_NAME_NOT_FOUND);\r\n            if (typeof fun != 'function') eventList[name] = [];\r\n            else {\r\n                for (let index in event) {\r\n                    if (event[index] === fun) {\r\n                        event.splice(fun, 1);\r\n                        return event.length;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * 触发事件\r\n         * @public\r\n         * @param {string} name - 事件名称\r\n         * @param {object} e - 事件数据\r\n         * @throws {TypeError} 传入的参数错误或事件不存在时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.trigger = function (name, e) {\r\n            if (typeof name != 'string') throw new TypeError(Helper.PARAMETERS_TYPE_ERROR);\r\n            let event = eventList[name];\r\n            if (typeof event === 'undefined') throw new TypeError(EVENT_NAME_NOT_FOUND);\r\n            for (let fun of event) {\r\n                if (!fun(e))\r\n                    return;\r\n            }\r\n            return;\r\n        };\r\n    }\r\n}\r\nexport { Event }","const PARAMETERS_TYPE_ERROR = 'Parameters type error.';\r\n\r\n/**\r\n * 设置值\r\n * @alias Helper.setValue\r\n * @param {*} value - 值\r\n * @param {*} defaultValue - 默认值\r\n * @param {string} type - 类型\r\n * @returns {*} - 值\r\n */\r\nfunction setValue(value, defaultValue, type) {\r\n    let returnValue;\r\n    if (isEmpty(value)) returnValue = clone(defaultValue);\r\n    else returnValue = clone(value);\r\n    if (!isEmpty(type)) checkType(returnValue, type);\r\n    else if (!isEmpty(defaultValue)) checkType(returnValue, _typeof(defaultValue));\r\n    return returnValue;\r\n}\r\n\r\n/**\r\n * 设置多个值\r\n * @param {object} values - 值\r\n * @param {object} defaultValues - 默认值\r\n * @param {object} types - 类型\r\n * @returns {object} - 值\r\n */\r\nfunction setValues(values, defaultValues, types, clone = true) {\r\n    let returnValues = clone ? setValue(values, {}) : defaultValues;\r\n    let _values = clone ? returnValues : setValue(values, {});\r\n    for (let key in defaultValues) {\r\n        if (_typeof(defaultValues[key]) === 'object') \r\n            returnValues[key] = setValues(_values[key], defaultValues[key], types[key]);\r\n        else\r\n            returnValues[key] = setValue(_values[key], defaultValues[key], types[key]);\r\n    }\r\n    return returnValues;\r\n}\r\n\r\n/**\r\n * 检查类型\r\n * @alias Helper.checkType\r\n * @param {string} value - 值\r\n * @param {string} type - 类型\r\n * @param {boolean} canBeNull - 可以为空\r\n */\r\nfunction checkType(value, type, canBeNull = true) {\r\n    if (typeof type != 'string' && _typeof(type) != 'array') throw new TypeError(PARAMETERS_TYPE_ERROR);\r\n    if (canBeNull && isEmpty(value)) return;\r\n    if (_typeof(type) === 'array') {\r\n        let flat = false;\r\n        for (let item of type) {\r\n            if (typeof item != 'string') throw new TypeError(PARAMETERS_TYPE_ERROR);\r\n            if (_typeof(value) === item) flat = true;\r\n            break;\r\n        }\r\n        if (!flat) throw new TypeError(PARAMETERS_TYPE_ERROR);\r\n    } else if (_typeof(value) != type) throw new TypeError(PARAMETERS_TYPE_ERROR);\r\n}\r\n\r\n/**\r\n * 检查多个值\r\n * @param {object} values - 值\r\n * @param {object} types - 类型\r\n * @returns {object} - 值\r\n */\r\nfunction checkTypes(values, types, canBeNull = true) {\r\n    if (canBeNull && isEmpty(values)) return;\r\n    for (let key in types) {\r\n        if (_typeof(types[key]) === 'object') \r\n            checkTypes(values[key], types[key]);\r\n        else\r\n            checkType(values[key], types[key], canBeNull);\r\n    }\r\n}\r\n\r\n/**\r\n * 检查是否为空\r\n * @param {*} value - 值\r\n */\r\nfunction isEmpty(value) {\r\n    return typeof value === 'undefined' ||\r\n        (typeof value === 'number' && isNaN(value)) ||\r\n        value === null\r\n}\r\n\r\n/**\r\n * 获取对象的类型（可区分数组等）\r\n * @alias Helper._typeof\r\n * @param {*} object - 对象\r\n */\r\nfunction _typeof(object) {\r\n    //eg: [Object Function] -> Function -> function\r\n    return Object.prototype.toString.call(object).slice(8, -1).toLowerCase();\r\n}\r\n\r\n/**\r\n * 克隆对象\r\n * @param {*} object \r\n */\r\nfunction clone(object) {\r\n    let result, type = _typeof(object);\r\n    //确定result的类型\r\n    if (type === 'object') result = {};\r\n    else if (type === 'array') result = [];\r\n    else return object;\r\n    for (let key in object) {\r\n        result[key] = clone(object[key]); //递归调用\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * 帮助对象\r\n * @namespace\r\n */\r\nconst Helper = {\r\n    setValue: setValue,\r\n    setValues: setValues,\r\n    checkType: checkType,\r\n    checkTypes: checkTypes,\r\n    isEmpty: isEmpty,\r\n    _typeof: _typeof,\r\n    clone: clone,\r\n    PARAMETERS_TYPE_ERROR: PARAMETERS_TYPE_ERROR\r\n}\r\n\r\nexport { Helper }","/**\r\n * 双向链表类\r\n */\r\nclass LinkedList {\r\n    /**\r\n     * 创建一个双向链表。\r\n     */\r\n    constructor() {\r\n        /**\r\n         * 双向链表节点\r\n         * @private\r\n        */\r\n        class node {\r\n            constructor(element) {\r\n                this.element = element;\r\n                this.next = null;\r\n                this.previous = null;\r\n            }\r\n        }\r\n        //初始化\r\n        let topNode = new node(null);\r\n        let bottomNode = new node(null);\r\n        let length = 0;\r\n        topNode.next = bottomNode;\r\n        bottomNode.previous = topNode;\r\n        //公共函数\r\n        /**\r\n         * 获取元素个数\r\n         * @returns {number} 元素个数\r\n         */\r\n        this.getLength = l => length;\r\n        /**\r\n         * 插入元素\r\n         * @param {*} element - 元素\r\n         * @param {boolean} top - true: 插入到顶部 false: 插入到底部\r\n         */\r\n        this.push = function (element, top) {\r\n            let thisNode = new node(element);\r\n            if (top) {\r\n                thisNode.next = topNode.next;\r\n                thisNode.previous = topNode;\r\n                topNode.next = topNode.next.previous = thisNode;\r\n            }\r\n            else {\r\n                thisNode.previous = bottomNode.previous;\r\n                thisNode.next = bottomNode;\r\n                bottomNode.previous = bottomNode.previous.next = thisNode;\r\n            }\r\n            length++;\r\n        };\r\n        /**\r\n         * 读取元素\r\n         * @param {boolean} remove - 读取后是否删除\r\n         * @param {boolean} top - true: 读取顶部 false: 读取底部\r\n         * @returns {*} 元素\r\n         */\r\n        this.pop = function (remove, top) {\r\n            let thisNode;\r\n            if (top) {\r\n                thisNode = topNode.next;\r\n                if (topNode.next != bottomNode && remove) {\r\n                    thisNode.next.previous = topNode;\r\n                    topNode.next = thisNode.next;\r\n                }\r\n            }\r\n            else {\r\n                thisNode = bottomNode.previous;\r\n                if (bottomNode.previous != topNode && remove) {\r\n                    thisNode.previous.next = bottomNode;\r\n                    bottomNode.previous = thisNode.previous;\r\n                }\r\n            }\r\n            if (remove)\r\n                length--;\r\n            return thisNode.element;\r\n        };\r\n        /**\r\n         * 清空链表\r\n         */\r\n        this.clean = function () {\r\n            topNode = new node(null);\r\n            bottomNode = new node(null);\r\n            topNode.next = bottomNode;\r\n            bottomNode.previous = topNode;\r\n            length = 0;\r\n        };\r\n        /**\r\n         * 遍历链表\r\n         * @param {function} fun - 遍历回调函数\r\n         * 回调函数（参数：元素，返回：{remove：删除此元素，add:插入元素(add.addToUp:插入到上方, add.element:元素), stop：停止遍历}）\r\n         * @param {boolean} topToBottom - true: 从顶到底 false: 从底到顶\r\n         */\r\n        this.forEach = function (fun, topToBottom) {\r\n            let thisNode = topToBottom ? topNode : bottomNode;\r\n            while (topToBottom ?\r\n                (thisNode = thisNode.next) != bottomNode : (thisNode = thisNode.previous) != topNode) {\r\n                let _return = fun(thisNode.element);\r\n                if (_return) {\r\n                    if (_return.add) {\r\n                        let newNode = new node(_return.add.element);\r\n                        if (_return.add.addToUp) {\r\n                            newNode.previous = thisNode.previous;\r\n                            newNode.next = thisNode;\r\n                            thisNode.previous.next = newNode;\r\n                            thisNode.previous = newNode;\r\n                        }\r\n                        else {\r\n                            newNode.previous = thisNode;\r\n                            newNode.next = thisNode.next;\r\n                            thisNode.next.previous = newNode;\r\n                            thisNode.next = newNode;\r\n                        }\r\n                        length++;\r\n                    }\r\n                    if (_return.remove) {\r\n                        thisNode.previous.next = thisNode.next;\r\n                        thisNode.next.previous = thisNode.previous;\r\n                        length--;\r\n                    }\r\n                    if (_return.stop) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\nexport {LinkedList}","import { Helper } from '../helper'\r\n\r\n/**\r\n * 渲染器抽象类\r\n */\r\nclass BaseRenderer {\r\n    /**\r\n     * 实例化一个渲染器抽象类\r\n     * @param {object} element - Element 元素\r\n     * @param {openBSE~Options} options - 全局选项\r\n     * @param {object} elementSize - 元素大小\r\n     */\r\n    constructor(element, options, elementSize) {\r\n        if (new.target === BaseRenderer) {\r\n            throw new SyntaxError();\r\n        }\r\n\r\n        init(); //初始化\r\n\r\n        /**\r\n         * 隐藏弹幕\r\n         * @private @type {boolean}\r\n         */\r\n        let _hide = false;\r\n\r\n        /**\r\n         * 透明度\r\n         * @private @type {number}\r\n         */\r\n        let _opacity = 0.0;\r\n\r\n        /**\r\n         * 清除屏幕内容\r\n         * @abstract\r\n         */\r\n        this.cleanScreen = function () {\r\n            throw new SyntaxError();\r\n        }\r\n\r\n        /**\r\n         * 隐藏弹幕。\r\n         */\r\n        this.hide = function () {\r\n            _hide = true;\r\n            element.style.visibility = 'hidden';\r\n        }\r\n\r\n        /**\r\n         * 显示弹幕。\r\n         */\r\n        this.show = function () {\r\n            _hide = false;\r\n            element.style.visibility = 'visible';\r\n        }\r\n\r\n        /**\r\n         * 设置弹幕不透明度。\r\n         */\r\n        this.setOpacity = _setOpacity;\r\n\r\n        /**\r\n         * 设置弹幕不透明度。\r\n         */\r\n        function _setOpacity() {\r\n            if (options.opacity === 1) element.style.opacity = '';\r\n            else element.style.opacity = options.opacity;\r\n        }\r\n\r\n        /**\r\n         * 获取弹幕不透明度。\r\n         * @returns {number} 弹幕不透明度：取值范围 0.0 到 1.0，0.0 全透明；1.0 不透明。\r\n         */\r\n        this.getOpacity = () => _opacity;\r\n\r\n        /**\r\n         * 获取弹幕可见性。\r\n         * @returns {boolean} 指示弹幕是否可见。\r\n         * @description 获取弹幕可见性。\r\n         */\r\n        this.getVisibility = () => !_hide;\r\n\r\n        /**\r\n         * 绘制函数\r\n         * @abstract\r\n         */\r\n        this.draw = function () {\r\n            throw new SyntaxError();\r\n        }\r\n\r\n        /**\r\n         * 创建弹幕元素\r\n         * @abstract\r\n         * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n         */\r\n        this.creatAndgetWidth = function (bulletScreenOnScreen) {\r\n            throw new SyntaxError();\r\n        }\r\n\r\n        /**\r\n         * 删除弹幕元素\r\n         * @abstract\r\n         * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n         */\r\n        this.delete = function (bulletScreenOnScreen) {\r\n            throw new SyntaxError();\r\n        }\r\n\r\n        /**\r\n         * 检查弹幕是否被隐藏\r\n         * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n         */\r\n        this.checkWhetherHide = (bulletScreenOnScreen) => (bulletScreenOnScreen.bulletScreen.type & options.hiddenTypes) === bulletScreenOnScreen.bulletScreen.type;\r\n\r\n        /**\r\n        * 设置尺寸\r\n        * @function\r\n        */\r\n        this.setSize = setSize;\r\n\r\n        /**\r\n         * 设置尺寸\r\n         * @private\r\n         */\r\n        function setSize() {\r\n            element.style.width = `${elementSize.width}px`;\r\n            element.style.height = `${elementSize.height}px`;\r\n            if (options.scaling != 1) {\r\n                element.style.transform =\r\n                    element.style.webkitTransform =\r\n                    element.style.msTransform = `scale(${options.scaling},${options.scaling})`;\r\n                element.style.transformOrigin =\r\n                    element.style.webkitTransformOrigin =\r\n                    element.style.msTransformOrigin = `left top`;\r\n            } else {\r\n                element.style.transform =\r\n                    element.style.webkitTransform =\r\n                    element.style.msTransform =\r\n                    element.style.transformOrigin =\r\n                    element.style.webkitTransformOrigin =\r\n                    element.style.msTransformOrigin = '';\r\n            }\r\n        }\r\n\r\n        /**\r\n         * 初始化\r\n         * @private\r\n         */\r\n        function init() {\r\n            setSize();\r\n            _setOpacity();\r\n            element.style.position = 'relative';\r\n        }\r\n    }\r\n}\r\n\r\nexport { BaseRenderer };","import { BaseRenderer } from './baseRenderer'\r\nimport { Helper } from '../helper'\r\n\r\n/**\r\n * Canvas 渲染器抽象类\r\n */\r\nclass CanvasBaseRenderer extends BaseRenderer {\r\n    /**\r\n     * 实例化一个 Canvas 渲染器抽象类\r\n     * @param {object} element - Element 元素\r\n     * @param {openBSE~Options} options - 全局选项\r\n     * @param {object} elementSize - 元素大小\r\n     * @param {Event} event - 事件对象\r\n     * @param {object} bulletScreensOnScreen - 屏幕弹幕列表对象\r\n     */\r\n    constructor(element, options, elementSize, event, bulletScreensOnScreen) {\r\n        if (new.target === CanvasBaseRenderer) {\r\n            throw new SyntaxError();\r\n        }\r\n\r\n        /**\r\n         * DPI 缩放比例（倍数）\r\n         * @private @type {number}\r\n         */\r\n        let _devicePixelRatio = typeof window.devicePixelRatio === 'undefined' ? 1 : window.devicePixelRatio;\r\n        _devicePixelRatio *= options.scaling;\r\n        /**\r\n         * 画布元素\r\n         * @private @type {Element}\r\n         */\r\n        let _canvas = init();\r\n        super(_canvas, options, elementSize);\r\n\r\n        /**\r\n         * 创建弹幕元素\r\n         * @override\r\n         * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n         */\r\n        this.creatAndgetWidth = function (bulletScreenOnScreen) {\r\n            let bulletScreen = bulletScreenOnScreen.bulletScreen;\r\n            let hideCanvas = document.createElement('canvas');\r\n            let hideCanvasContext = hideCanvas.getContext('2d');\r\n\r\n            hideCanvasContext.font = `${bulletScreen.style.fontWeight} ${bulletScreenOnScreen.size}px ${bulletScreen.style.fontFamily}`;\r\n            bulletScreenOnScreen.width = hideCanvasContext.measureText(bulletScreen.text).width; //弹幕的宽度：像素\r\n\r\n            hideCanvas.width = (bulletScreenOnScreen.width + 8) * _devicePixelRatio;\r\n            hideCanvas.height = (bulletScreenOnScreen.height + 8) * _devicePixelRatio;\r\n\r\n            hideCanvasContext.shadowColor = 'black';\r\n            hideCanvasContext.font = `${bulletScreen.style.fontWeight} ${bulletScreenOnScreen.size * _devicePixelRatio}px ${bulletScreen.style.fontFamily}`;\r\n            let textX = 4 * _devicePixelRatio;\r\n            let textY = (4 + bulletScreenOnScreen.size * 0.8) * _devicePixelRatio;\r\n            if (bulletScreen.style.color != null) {\r\n                hideCanvasContext.shadowBlur = (bulletScreen.style.shadowBlur + 0.5) * _devicePixelRatio;\r\n                hideCanvasContext.fillStyle = bulletScreen.style.color;\r\n                hideCanvasContext.fillText(bulletScreen.text, textX, textY);\r\n            }\r\n            if (bulletScreen.style.borderColor != null) {\r\n                hideCanvasContext.shadowBlur = 0;\r\n                hideCanvasContext.lineWidth = 0.5 * _devicePixelRatio;\r\n                hideCanvasContext.strokeStyle = bulletScreen.style.borderColor;\r\n                hideCanvasContext.strokeText(bulletScreen.text, textX, textY);\r\n            }\r\n            if (bulletScreen.style.boxColor != null) {\r\n                hideCanvasContext.shadowBlur = 0;\r\n                hideCanvasContext.lineWidth = _devicePixelRatio;\r\n                hideCanvasContext.strokeStyle = bulletScreen.style.boxColor;\r\n                hideCanvasContext.strokeRect(_devicePixelRatio, _devicePixelRatio, hideCanvas.width - _devicePixelRatio, hideCanvas.height - _devicePixelRatio);\r\n            }\r\n            bulletScreenOnScreen.hideCanvas = hideCanvas;\r\n        }\r\n\r\n        /**\r\n         * 删除弹幕元素\r\n         * @override\r\n         * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n         */\r\n        this.delete = function (bulletScreenOnScreen) {\r\n\r\n        }\r\n\r\n        let _setSize = this.setSize;\r\n        /**\r\n         * 设置尺寸\r\n         * @override\r\n         */\r\n        this.setSize = function () {\r\n            _setSize();\r\n            _devicePixelRatio = typeof window.devicePixelRatio === 'undefined' ? 1 : window.devicePixelRatio;\r\n            _devicePixelRatio *= options.scaling;\r\n            _canvas.width = elementSize.width * _devicePixelRatio;\r\n            _canvas.height = elementSize.height * _devicePixelRatio;\r\n        }\r\n\r\n        /**\r\n         * 获取缩放比例\r\n         * @returns {number} 缩放比例\r\n         */\r\n        this.getDevicePixelRatio = () => _devicePixelRatio;\r\n\r\n        /**\r\n         * 获取画布对象\r\n         * @returns {Element} 画布对象\r\n         */\r\n        this.getCanvas = () => _canvas;\r\n\r\n        /**\r\n         * 添加Canvas\r\n         * @private\r\n         * @returns {Element} 画布对象\r\n         */\r\n        function init() {\r\n            let canvas = document.createElement('canvas'); //canvas对象\r\n            element.innerHTML = '';\r\n            element.appendChild(canvas);\r\n            canvas.width = elementSize.width * _devicePixelRatio;\r\n            canvas.height = elementSize.height * _devicePixelRatio;\r\n            registerEvent(canvas); //注册事件响应程序\r\n            return canvas;\r\n        }\r\n\r\n        let _checkWhetherHide = this.checkWhetherHide;\r\n        /**\r\n         * 注册事件响应程序\r\n         * @private\r\n         * @param {Element} element - 元素\r\n         */\r\n        function registerEvent(element) {\r\n            function getBulletScreenOnScreenByLocation(location) {\r\n                let bulletScreen = null;\r\n                bulletScreensOnScreen.forEach(function (bulletScreenOnScreen) {\r\n                    if (_checkWhetherHide(bulletScreenOnScreen)) return null;\r\n                    let x1 = bulletScreenOnScreen.x - 4;\r\n                    let x2 = x1 + bulletScreenOnScreen.width + 8;\r\n                    let y1 = bulletScreenOnScreen.actualY - 4;\r\n                    let y2 = y1 + bulletScreenOnScreen.height + 8;\r\n                    if (location.x >= x1 && location.x <= x2 && location.y >= y1 && location.y <= y2) {\r\n                        bulletScreen = Helper.clone(bulletScreenOnScreen.bulletScreen);\r\n                        return { stop: true };\r\n                    }\r\n                }, false);\r\n                return bulletScreen;\r\n            }\r\n            function getLocation(e) {\r\n                function getOffsetTop(element) {\r\n                    let offsetTop = 0;\r\n                    do {\r\n                        offsetTop += element.offsetTop;\r\n                    } while ((element = element.offsetParent) != null);\r\n                    return offsetTop;\r\n                }\r\n                function getOffsetLeft(element) {\r\n                    let offsetLeft = 0;\r\n                    do {\r\n                        offsetLeft += element.offsetLeft;\r\n                    } while ((element = element.offsetParent) != null);\r\n                    return offsetLeft;\r\n                }\r\n                if (typeof e.offsetX === 'undefined' || e.offsetX === null) {\r\n                    if (typeof e.layerX === 'undefined' || e.layerX === null) {\r\n                        if (typeof e.pageX === 'undefined' || e.pageX === null) {\r\n                            let doc = document.documentElement, body = document.body;\r\n                            e.pageX = e.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\r\n                            e.pageY = e.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\r\n                        }\r\n                        e.layerX = e.pageX - getOffsetLeft(e.target);\r\n                        e.layerY = e.pageY - getOffsetTop(e.target);\r\n                    }\r\n                    e.offsetX = e.layerX - e.target.clientLeft;\r\n                    e.offsetY = e.layerY - e.target.clientTop;\r\n                }\r\n                return {\r\n                    x: e.offsetX,\r\n                    y: e.offsetY\r\n                };\r\n            }\r\n\r\n            //上下文菜单\r\n            element.oncontextmenu = function (e) {\r\n                let bulletScreen = getBulletScreenOnScreenByLocation(getLocation(e));\r\n                if (bulletScreen)\r\n                    event.trigger('contextmenu', {\r\n                        bulletScreen: bulletScreen\r\n                    });\r\n                return false;\r\n            };\r\n            //单击\r\n            element.onclick = function (e) {\r\n                let bulletScreen = getBulletScreenOnScreenByLocation(getLocation(e));\r\n                if (bulletScreen)\r\n                    event.trigger('click', {\r\n                        bulletScreen: bulletScreen\r\n                    });\r\n                return false;\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { CanvasBaseRenderer };","import { CanvasBaseRenderer } from './canvasBaseRenderer'\r\nimport { BrowserNotSupportError } from '../../browserNotSupportError'\r\n\r\n/**\r\n * Canvas 渲染器类\r\n */\r\nclass CanvasRenderer extends CanvasBaseRenderer {\r\n    /**\r\n     * 实例化一个 Canvas 渲染器类\r\n     * @param {object} element - Element 元素\r\n     * @param {openBSE~Options} options - 全局选项\r\n     * @param {object} elementSize - 元素大小\r\n     * @param {Event} event - 事件对象\r\n     * @param {object} bulletScreensOnScreen - 屏幕弹幕列表对象\r\n     * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误\r\n     */\r\n    constructor(element, options, elementSize, event, bulletScreensOnScreen) {\r\n        supportCheck(); //浏览器支持检测\r\n        super(element, options, elementSize, event, bulletScreensOnScreen);\r\n\r\n        /**\r\n         * 清除屏幕内容\r\n         * @override\r\n         */\r\n        this.cleanScreen = function () {\r\n            let canvas = this.getCanvas();\r\n            canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\r\n        }\r\n\r\n        /**\r\n         * 绘制函数\r\n         * @override\r\n         */\r\n        this.draw = function () {\r\n            let canvas = this.getCanvas();\r\n            let devicePixelRatio = this.getDevicePixelRatio();\r\n            //离屏渲染\r\n            let hideCanvas = document.createElement('canvas');\r\n            hideCanvas.width = canvas.width;\r\n            hideCanvas.height = canvas.height;\r\n            let hideCanvasContext = hideCanvas.getContext('2d');\r\n            bulletScreensOnScreen.forEach((bulletScreenOnScreen) => {\r\n                if (this.checkWhetherHide(bulletScreenOnScreen)) return;\r\n                hideCanvasContext.drawImage(bulletScreenOnScreen.hideCanvas, (bulletScreenOnScreen.x - 4) * devicePixelRatio, (bulletScreenOnScreen.actualY - 4) * devicePixelRatio, (bulletScreenOnScreen.width + 8) * devicePixelRatio, (bulletScreenOnScreen.height + 8) * devicePixelRatio);\r\n            }, true);\r\n            let canvasContext = canvas.getContext('2d');\r\n            canvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n            canvasContext.drawImage(hideCanvas, 0, 0);\r\n        }\r\n\r\n        /**\r\n         * 浏览器支持检测\r\n         * @private\r\n         * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误\r\n         */\r\n        function supportCheck() {\r\n            let canvas = document.createElement('canvas'); //canvas对象\r\n            if (typeof canvas.getContext != 'function') throw new BrowserNotSupportError('Canvas');\r\n            let context = canvas.getContext('2d');\r\n            if (context === null) throw new BrowserNotSupportError('Canvas 2D');\r\n            if (typeof context.fillText != 'function') throw new BrowserNotSupportError('Canvas 2D fillText Function');\r\n        }\r\n    }\r\n}\r\n\r\nexport { CanvasRenderer };","import { BaseRenderer } from './baseRenderer'\r\nimport { BrowserNotSupportError } from '../../browserNotSupportError'\r\nimport { Helper } from '../helper'\r\n\r\n/**\r\n * CSS3 渲染器类\r\n */\r\nclass CSS3Renderer extends BaseRenderer {\r\n    /**\r\n     * 实例化一个 CSS3 渲染器类\r\n     * @param {object} element - Element 元素\r\n     * @param {openBSE~Options} options - 全局选项\r\n     * @param {object} elementSize - 元素大小\r\n     * @param {Event} event - 事件对象\r\n     * @param {object} bulletScreensOnScreen - 屏幕弹幕列表对象\r\n     * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误\r\n     */\r\n    constructor(element, options, elementSize, event, bulletScreensOnScreen) {\r\n        supportCheck(); //浏览器支持检测\r\n        let _div = init();\r\n        super(_div, options, elementSize);\r\n\r\n        /**\r\n         * 清除屏幕内容\r\n         * @override\r\n         */\r\n        this.cleanScreen = function () {\r\n            _div.innerHTML = '';\r\n        }\r\n\r\n        /**\r\n         * 绘制函数\r\n         * @override\r\n         */\r\n        this.draw = function () {\r\n            bulletScreensOnScreen.forEach((bulletScreenOnScreen) => {\r\n                if (this.checkWhetherHide(bulletScreenOnScreen)) {\r\n                    bulletScreenOnScreen.div.style.visibility = 'hidden';\r\n                    return;\r\n                }\r\n                bulletScreenOnScreen.div.style.visibility = 'visible';\r\n                bulletScreenOnScreen.div.style.transform =\r\n                    bulletScreenOnScreen.div.style.webkitTransform =\r\n                    bulletScreenOnScreen.div.style.msTransform =\r\n                    `translate(${(bulletScreenOnScreen.x - 4)}px,${(bulletScreenOnScreen.actualY - 4)}px)`;\r\n            }, true);\r\n        }\r\n\r\n        /**\r\n         * 创建弹幕元素\r\n         * @override\r\n         * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n         */\r\n        this.creatAndgetWidth = function (bulletScreenOnScreen) {\r\n            let bulletScreen = bulletScreenOnScreen.bulletScreen;\r\n            let bulletScreenDiv = document.createElement('div');\r\n            bulletScreenDiv.style.position = 'absolute';\r\n            bulletScreenDiv.style.whiteSpace = 'nowrap';\r\n            bulletScreenDiv.style.fontWeight = bulletScreen.style.fontWeight;\r\n            bulletScreenDiv.style.fontSize = `${bulletScreenOnScreen.size}px`;\r\n            bulletScreenDiv.style.fontFamily = bulletScreen.style.fontFamily;\r\n            bulletScreenDiv.style.lineHeight = `${bulletScreenOnScreen.size}px`;\r\n            bulletScreenDiv.style.color = bulletScreen.style.color;\r\n            if (bulletScreen.style.shadowBlur != null)\r\n                bulletScreenDiv.style.textShadow = `0 0 ${bulletScreen.style.shadowBlur}px black`;\r\n            if (bulletScreen.style.borderColor != null) {\r\n                bulletScreenDiv.style.textStroke = bulletScreenDiv.style.webkitTextStroke = '0.5px';\r\n                bulletScreenDiv.style.textStrokeColor = bulletScreenDiv.style.webkitTextStrokeColor = bulletScreen.borderColor;\r\n            }\r\n            if (bulletScreen.style.boxColor != null) {\r\n                bulletScreenDiv.style.padding = '3px';\r\n                bulletScreenDiv.style.border = '1px solid';\r\n                bulletScreenDiv.style.borderColor = bulletScreen.style.boxColor;\r\n            }\r\n            else {\r\n                bulletScreenDiv.style.padding = '4px';\r\n            }\r\n            bulletScreenDiv.appendChild(document.createTextNode(bulletScreen.text));\r\n            bulletScreenDiv.bulletScreen = bulletScreen;\r\n            _div.appendChild(bulletScreenDiv);\r\n            bulletScreenOnScreen.width = bulletScreenDiv.clientWidth - 8; //弹幕的宽度：像素\r\n            bulletScreenOnScreen.div = bulletScreenDiv;\r\n        }\r\n\r\n        /**\r\n        * 删除弹幕元素\r\n        * @override\r\n        * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n        */\r\n        this.delete = function (bulletScreenOnScreen) {\r\n            _div.removeChild(bulletScreenOnScreen.div);\r\n        }\r\n\r\n        /**\r\n         * 添加Div\r\n         * @private\r\n         * @returns {Element} Div\r\n         */\r\n        function init() {\r\n            let div = document.createElement('div'); //DIV\r\n            element.innerHTML = '';\r\n            element.appendChild(div);\r\n            div.style.overflow = 'hidden';\r\n            div.style.padding = '0';\r\n            div.style.margin = '0';\r\n            div.style.userSelect =\r\n                div.style.webkitUserSelect =\r\n                div.style.msUserSelect = 'none';\r\n            div.style.cursor = 'default';\r\n            registerEvent(div); //注册事件响应程序\r\n            return div;\r\n        }\r\n\r\n        /**\r\n         * 浏览器支持检测\r\n         * @private\r\n         * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误\r\n         */\r\n        function supportCheck() {\r\n            let style = document.createElement('div').style;\r\n            if (\r\n                typeof style.transform === 'undefined' &&\r\n                typeof style.msTransform === 'undefined' &&\r\n                typeof style.webkitTransform === 'undefined'\r\n            ) throw new BrowserNotSupportError('CSS3 transform');\r\n        }\r\n\r\n        /**\r\n         * 注册事件响应程序\r\n         * @private\r\n         * @param {Element} element - 元素\r\n         */\r\n        function registerEvent(element) {\r\n            //上下文菜单\r\n            element.oncontextmenu = function (e) {\r\n                if (e.target != this)\r\n                    event.trigger('contextmenu', {\r\n                        bulletScreen: Helper.clone(e.target.bulletScreen)\r\n                    });\r\n                return false;\r\n            };\r\n            //单击\r\n            element.onclick = function (e) {\r\n                if (e.target != this)\r\n                    event.trigger('click', {\r\n                        bulletScreen: Helper.clone(e.target.bulletScreen)\r\n                    });\r\n                return false;\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { CSS3Renderer };","import { BaseRenderer } from './baseRenderer';\r\n\r\n/**\r\n * 渲染器\r\n * @private @constant\r\n */\r\nconst RENDERERS = {\r\n    /**\r\n     * CSS3 渲染模式\r\n     * @private @readonly\r\n     */\r\n    css3: require('./css3Renderer').CSS3Renderer,\r\n    /**\r\n     * SVG 渲染模式\r\n     * @private @readonly\r\n     */\r\n    svg: require('./svgRenderer').SVGRenderer,\r\n    /**\r\n     * WebGL 渲染模式\r\n     * @private @readonly\r\n     */\r\n    webgl: require('./webglRenderer').WebGLRenderer,\r\n    /**\r\n     * Canvas 2D 渲染模式\r\n     * @private @readonly\r\n     */\r\n    canvas: require('./canvasRenderer').CanvasRenderer\r\n}\r\n\r\n/**\r\n * 渲染器工厂\r\n */\r\nclass RenderersFactory {\r\n    /**\r\n     * 实例化一个渲染器工厂\r\n     * @param {object} element - Element 元素\r\n     * @param {openBSE~Options} options - 全局选项\r\n     * @param {object} elementSize - 元素大小\r\n     * @param {Event} event - 事件对象\r\n     * @param {object} bulletScreensOnScreen - 屏幕弹幕列表对象\r\n     */\r\n    constructor(element, options, elementSize, event, bulletScreensOnScreen) {\r\n        /**\r\n         * 获取渲染器\r\n         * @param {string} renderMode - 渲染模式\r\n         * @returns {BaseRenderer} 渲染器的实例\r\n         * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误\r\n         * @throws {TypeError} 传入的参数错误时引发错误。请参阅 MDN [TypeError]{@link https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypeError} 。\r\n         */\r\n        this.getRenderer = function (renderMode) {\r\n            let renderer = RENDERERS[renderMode];\r\n            if (typeof(renderer) === 'undefined') throw new TypeError(`The render mode \"${renderMode}\" is undefined.`);\r\n            return new renderer(element, options, elementSize, event, bulletScreensOnScreen);\r\n        }\r\n    }\r\n}\r\n\r\nexport { RenderersFactory };","import { BaseRenderer } from './baseRenderer'\r\nimport { BrowserNotSupportError } from '../../browserNotSupportError'\r\nimport { Helper } from '../helper'\r\n\r\n/**\r\n * SVG 渲染器类\r\n */\r\nclass SVGRenderer extends BaseRenderer {\r\n    /**\r\n     * 实例化一个 SVG 渲染器类\r\n     * @param {object} element - Element 元素\r\n     * @param {openBSE~Options} options - 全局选项\r\n     * @param {object} elementSize - 元素大小\r\n     * @param {Event} event - 事件对象\r\n     * @param {object} bulletScreensOnScreen - 屏幕弹幕列表对象\r\n     * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误\r\n     */\r\n    constructor(element, options, elementSize, event, bulletScreensOnScreen) {\r\n        supportCheck(); //浏览器支持检测\r\n        let _div = init();\r\n        let _svg;\r\n        let _defsSvg;\r\n        super(_div, options, elementSize);\r\n\r\n        /**\r\n         * 清除屏幕内容\r\n         * @override\r\n         */\r\n        this.cleanScreen = function () {\r\n            _svg.innerHTML = '';\r\n            _defsSvg = createElementSVG('defs'); //defs\r\n            _svg.appendChild(_defsSvg);\r\n        }\r\n\r\n        /**\r\n         * 绘制函数\r\n         * @override\r\n         */\r\n        this.draw = function () {\r\n            bulletScreensOnScreen.forEach((bulletScreenOnScreen) => {\r\n                for (let index in bulletScreenOnScreen.svg) {\r\n                    let item = bulletScreenOnScreen.svg[index];\r\n                    if (this.checkWhetherHide(bulletScreenOnScreen)) item.setAttribute('opacity', '0');\r\n                    else item.setAttribute('opacity', '1');\r\n                    item.setAttribute('transform', `translate(${(bulletScreenOnScreen.x - 4)},${(bulletScreenOnScreen.actualY - 4)})`);\r\n                }\r\n            }, true);\r\n        }\r\n\r\n        /**\r\n         * 创建弹幕元素\r\n         * @override\r\n         * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n         */\r\n        this.creatAndgetWidth = function (bulletScreenOnScreen) {\r\n            let bulletScreen = bulletScreenOnScreen.bulletScreen;\r\n            bulletScreenOnScreen.svg = {};\r\n\r\n            let textSvg = createElementSVG('text');\r\n            textSvg.setAttribute('x', 0);\r\n            textSvg.setAttribute('y', bulletScreenOnScreen.size * 0.8);\r\n            textSvg.setAttribute('font-family', bulletScreen.style.fontFamily);\r\n            textSvg.setAttribute('font-size', bulletScreenOnScreen.size);\r\n            textSvg.setAttribute('font-weight', bulletScreen.style.fontWeight);\r\n            textSvg.setAttribute('fill', bulletScreen.style.color);\r\n            textSvg.appendChild(document.createTextNode(bulletScreen.text));\r\n            if (bulletScreen.style.borderColor != null) {\r\n                textSvg.setAttribute('stroke', bulletScreen.borderColor);\r\n                textSvg.setAttribute('stroke-width', 0.5);\r\n            }\r\n\r\n            if (bulletScreen.style.shadowBlur != null) {\r\n                let filterId = `bulletScreenEngine_svgFilter_shadow_${bulletScreen.style.shadowBlur}`;\r\n                let filterSvg = document.getElementById(filterId);\r\n                if (filterSvg === null) {\r\n                    filterSvg = createElementSVG('filter');\r\n                    filterSvg.id = filterId;\r\n                    filterSvg.setAttribute('x', '-100%');\r\n                    filterSvg.setAttribute('y', '-100%');\r\n                    filterSvg.setAttribute('width', '300%');\r\n                    filterSvg.setAttribute('height', '300%');\r\n                    let feOffsetSvg = createElementSVG('feOffset');\r\n                    feOffsetSvg.setAttribute('result', 'offOut');\r\n                    feOffsetSvg.setAttribute('in', 'SourceAlpha');\r\n                    filterSvg.appendChild(feOffsetSvg);\r\n                    let feGaussianBlurSvg = createElementSVG('feGaussianBlur');\r\n                    feGaussianBlurSvg.setAttribute('result', 'blurOut');\r\n                    feGaussianBlurSvg.setAttribute('in', 'offOut');\r\n                    feGaussianBlurSvg.setAttribute('stdDeviation', bulletScreen.style.shadowBlur);\r\n                    filterSvg.appendChild(feGaussianBlurSvg);\r\n                    let feBlendSvg = createElementSVG('feBlend');\r\n                    feBlendSvg.setAttribute('in', 'SourceGraphic');\r\n                    feBlendSvg.setAttribute('in2', 'blurOut');\r\n                    feBlendSvg.setAttribute('mode', 'normal');\r\n                    filterSvg.appendChild(feBlendSvg);\r\n                    filterSvg.bulletScreenCount = 0;\r\n                    _defsSvg.appendChild(filterSvg);\r\n                }\r\n                filterSvg.bulletScreenCount++;\r\n                textSvg.setAttribute('filter', `url(#${filterId})`);\r\n                bulletScreenOnScreen.filterId = filterId;\r\n            }\r\n\r\n            _svg.appendChild(textSvg);\r\n            bulletScreenOnScreen.svg.text = textSvg;\r\n            bulletScreenOnScreen.width = textSvg.getComputedTextLength(); //弹幕的宽度：像素\r\n\r\n            if (bulletScreen.style.boxColor != null) {\r\n                let rectSvg = createElementSVG('rect');\r\n                rectSvg.setAttribute('x', -3);\r\n                rectSvg.setAttribute('y', -3);\r\n                rectSvg.setAttribute('fill', 'none');\r\n                rectSvg.setAttribute('height', bulletScreenOnScreen.height + 7);\r\n                rectSvg.setAttribute('width', bulletScreenOnScreen.width + 7);\r\n                rectSvg.setAttribute('stroke', bulletScreen.style.boxColor);\r\n                rectSvg.setAttribute('stroke-width', 1);\r\n                _svg.appendChild(rectSvg);\r\n                bulletScreenOnScreen.svg.rect = rectSvg;\r\n            }\r\n        }\r\n\r\n        /**\r\n        * 删除弹幕元素\r\n        * @override\r\n        * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n        */\r\n        this.delete = function (bulletScreenOnScreen) {\r\n            if (typeof bulletScreenOnScreen.filterId != 'undefined') {\r\n                let filterSvg = document.getElementById(bulletScreenOnScreen.filterId);\r\n                if (filterSvg != null && --filterSvg.bulletScreenCount === 0)\r\n                    _defsSvg.removeChild(filterSvg);\r\n            }\r\n            for (let index in bulletScreenOnScreen.svg) {\r\n                _svg.removeChild(bulletScreenOnScreen.svg[index]);\r\n            }\r\n        }\r\n\r\n        let _setSize = this.setSize;\r\n        /**\r\n         * 设置尺寸\r\n         * @override\r\n         */\r\n        this.setSize = function () {\r\n            _setSize();\r\n            _svg.setAttribute('height', elementSize.height);\r\n            _svg.setAttribute('width', elementSize.width);\r\n        }\r\n\r\n        /**\r\n         * 添加Div\r\n         * @private\r\n         * @returns {Element} Div\r\n         */\r\n        function init() {\r\n            let div = document.createElement('div'); //DIV\r\n            element.innerHTML = '';\r\n            element.appendChild(div);\r\n            div.style.padding = '0';\r\n            div.style.margin = '0';\r\n            _svg = createElementSVG('svg'); //SVG\r\n            _defsSvg = createElementSVG('defs'); //defs\r\n            _svg.appendChild(_defsSvg);\r\n            _svg.setAttribute('height', elementSize.height);\r\n            _svg.setAttribute('width', elementSize.width);\r\n            div.appendChild(_svg);\r\n            let eventDiv = document.createElement('div'); //DIV\r\n            eventDiv.style.position = 'absolute';\r\n            eventDiv.style.top =\r\n                eventDiv.style.right =\r\n                eventDiv.style.bottom =\r\n                eventDiv.style.left = '0';\r\n            div.appendChild(eventDiv);\r\n            registerEvent(eventDiv); //注册事件响应程序\r\n            return div;\r\n        }\r\n\r\n        /**\r\n         * 浏览器支持检测\r\n         * @private\r\n         * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误\r\n         */\r\n        function supportCheck() {\r\n            if (typeof document.createElementNS != 'function') throw new BrowserNotSupportError('createElementNS Function');\r\n            if (typeof createElementSVG('svg').createSVGRect != 'function') throw new BrowserNotSupportError('SVG');\r\n        }\r\n\r\n        let _checkWhetherHide = this.checkWhetherHide;\r\n        /**\r\n         * 注册事件响应程序\r\n         * @private\r\n         * @param {Element} element - 元素\r\n         */\r\n        function registerEvent(element) {\r\n            function getBulletScreenOnScreenByLocation(location) {\r\n                let bulletScreen = null;\r\n                bulletScreensOnScreen.forEach(function (bulletScreenOnScreen) {\r\n                    if (_checkWhetherHide(bulletScreenOnScreen)) return null;\r\n                    let x1 = bulletScreenOnScreen.x - 4;\r\n                    let x2 = x1 + bulletScreenOnScreen.width + 8;\r\n                    let y1 = bulletScreenOnScreen.actualY - 4;\r\n                    let y2 = y1 + bulletScreenOnScreen.height + 8;\r\n                    if (location.x >= x1 && location.x <= x2 && location.y >= y1 && location.y <= y2) {\r\n                        bulletScreen = Helper.clone(bulletScreenOnScreen.bulletScreen);\r\n                        return { stop: true };\r\n                    }\r\n                }, false);\r\n                return bulletScreen;\r\n            }\r\n            function getLocation(e) {\r\n                function getOffsetTop(element) {\r\n                    let offsetTop = 0;\r\n                    do {\r\n                        offsetTop += element.offsetTop;\r\n                    } while ((element = element.offsetParent) != null);\r\n                    return offsetTop;\r\n                }\r\n                function getOffsetLeft(element) {\r\n                    let offsetLeft = 0;\r\n                    do {\r\n                        offsetLeft += element.offsetLeft;\r\n                    } while ((element = element.offsetParent) != null);\r\n                    return offsetLeft;\r\n                }\r\n                if (typeof e.offsetX === 'undefined' || e.offsetX === null) {\r\n                    if (typeof e.layerX === 'undefined' || e.layerX === null) {\r\n                        if (typeof e.pageX === 'undefined' || e.pageX === null) {\r\n                            let doc = document.documentElement, body = document.body;\r\n                            e.pageX = e.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\r\n                            e.pageY = e.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\r\n                        }\r\n                        e.layerX = e.pageX - getOffsetLeft(e.target);\r\n                        e.layerY = e.pageY - getOffsetTop(e.target);\r\n                    }\r\n                    e.offsetX = e.layerX - e.target.clientLeft;\r\n                    e.offsetY = e.layerY - e.target.clientTop;\r\n                }\r\n                return {\r\n                    x: e.offsetX,\r\n                    y: e.offsetY\r\n                };\r\n            }\r\n\r\n            //上下文菜单\r\n            element.oncontextmenu = function (e) {\r\n                let bulletScreen = getBulletScreenOnScreenByLocation(getLocation(e));\r\n                if (bulletScreen)\r\n                    event.trigger('contextmenu', {\r\n                        bulletScreen: bulletScreen\r\n                    });\r\n                return false;\r\n            };\r\n            //单击\r\n            element.onclick = function (e) {\r\n                let bulletScreen = getBulletScreenOnScreenByLocation(getLocation(e));\r\n                if (bulletScreen)\r\n                    event.trigger('click', {\r\n                        bulletScreen: bulletScreen\r\n                    });\r\n                return false;\r\n            };\r\n        }\r\n\r\n        /**\r\n         * 创建 SVG 元素\r\n         * @private\r\n         * @param {string} qualifiedName - Element 名称\r\n         * @param {object} options - 选项\r\n         */\r\n        function createElementSVG(qualifiedName, options) {\r\n            return document.createElementNS('http://www.w3.org/2000/svg', qualifiedName, options);\r\n        }\r\n    }\r\n}\r\n\r\nexport { SVGRenderer };","import { CanvasBaseRenderer } from './canvasBaseRenderer'\r\nimport { BrowserNotSupportError } from '../../browserNotSupportError'\r\n\r\n/**\r\n * WebGL 渲染器类\r\n */\r\nclass WebGLRenderer extends CanvasBaseRenderer {\r\n    /**\r\n     * 实例化一个 WebGL 渲染器类\r\n     * @param {object} element - Element 元素\r\n     * @param {openBSE~Options} options - 全局选项\r\n     * @param {object} elementSize - 元素大小\r\n     * @param {Event} event - 事件对象\r\n     * @param {object} bulletScreensOnScreen - 屏幕弹幕列表对象\r\n     * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误\r\n     */\r\n    constructor(element, options, elementSize, event, bulletScreensOnScreen) {\r\n        supportCheck(); //浏览器支持检测\r\n        super(element, options, elementSize, event, bulletScreensOnScreen);\r\n        /**\r\n         * WebGL 上下文对象\r\n         * @private @type {object}\r\n         */\r\n        let _webglContext;\r\n        let _positionAttributeLocation;\r\n        let _resolutionUniformLocation;\r\n        /**\r\n         * Canvas 元素\r\n         * @private @type {object}\r\n         */\r\n        let _canvas = this.getCanvas();\r\n        init();\r\n\r\n        /**\r\n         * 清除屏幕内容\r\n         * @override\r\n         */\r\n        this.cleanScreen = function () {\r\n            _webglContext.clear(_webglContext.COLOR_BUFFER_BIT);\r\n        }\r\n\r\n        /**\r\n         * 绘制函数\r\n         * @override\r\n         */\r\n        this.draw = function () {\r\n            let devicePixelRatio = this.getDevicePixelRatio();\r\n            // 清空画布\r\n            _webglContext.clear(_webglContext.COLOR_BUFFER_BIT);\r\n            bulletScreensOnScreen.forEach((bulletScreenOnScreen) => {\r\n                if (this.checkWhetherHide(bulletScreenOnScreen)) return;\r\n                // 四个顶点坐标\r\n                let x1 = (bulletScreenOnScreen.x - 4) * devicePixelRatio;\r\n                let x2 = x1 + (bulletScreenOnScreen.width + 8) * devicePixelRatio;\r\n                let y1 = (bulletScreenOnScreen.actualY - 4) * devicePixelRatio;\r\n                let y2 = y1 + (bulletScreenOnScreen.height + 8) * devicePixelRatio;\r\n                //绑定纹理\r\n                _webglContext.bindTexture(_webglContext.TEXTURE_2D, bulletScreenOnScreen.texture2D);\r\n                //绑定范围\r\n                let positionBuffer = _webglContext.createBuffer();\r\n                // 将绑定点绑定到缓冲数据（positionBuffer）\r\n                _webglContext.bindBuffer(_webglContext.ARRAY_BUFFER, positionBuffer);\r\n                _webglContext.enableVertexAttribArray(_positionAttributeLocation);\r\n                // 告诉属性怎么从positionBuffer中读取数据 (ARRAY_BUFFER)\r\n                _webglContext.vertexAttribPointer(_positionAttributeLocation, 2, //size 每次迭代运行提取两个单位数据\r\n                    _webglContext.FLOAT, //type 每个单位的数据类型是32位浮点型\r\n                    false, //normalize 不需要归一化数据\r\n                    0, //stride 0 = 移动单位数量 * 每个单位占用内存（sizeof(type)）\r\n                    // 每次迭代运行运动多少内存到下一个数据开始点\r\n                    0 //offset 从缓冲起始位置开始读取\r\n                );\r\n                _webglContext.bufferData(_webglContext.ARRAY_BUFFER, new Float32Array([x1, y1,\r\n                    x2, y1,\r\n                    x1, y2,\r\n                    x1, y2,\r\n                    x2, y1,\r\n                    x2, y2]), _webglContext.STATIC_DRAW);\r\n                //绘制\r\n                _webglContext.drawArrays(_webglContext.TRIANGLES, //primitiveType\r\n                    0, //offset\r\n                    6 //count\r\n                );\r\n            }, true);\r\n        }\r\n\r\n        let _creatAndgetWidth = this.creatAndgetWidth;\r\n        /**\r\n         * 创建弹幕元素\r\n         * @override\r\n         * @param {object} bulletScreenOnScreen - 屏幕弹幕对象\r\n         */\r\n        this.creatAndgetWidth = function (bulletScreenOnScreen) {\r\n            _creatAndgetWidth(bulletScreenOnScreen);\r\n            let texture = _webglContext.createTexture();\r\n            _webglContext.bindTexture(_webglContext.TEXTURE_2D, texture);\r\n            // 设置参数\r\n            _webglContext.texParameteri(_webglContext.TEXTURE_2D, _webglContext.TEXTURE_MIN_FILTER, _webglContext.NEAREST);\r\n            _webglContext.texParameteri(_webglContext.TEXTURE_2D, _webglContext.TEXTURE_MAG_FILTER, _webglContext.NEAREST);\r\n            _webglContext.texParameteri(_webglContext.TEXTURE_2D, _webglContext.TEXTURE_WRAP_S, _webglContext.CLAMP_TO_EDGE);\r\n            _webglContext.texParameteri(_webglContext.TEXTURE_2D, _webglContext.TEXTURE_WRAP_T, _webglContext.CLAMP_TO_EDGE);\r\n            _webglContext.texImage2D(_webglContext.TEXTURE_2D, 0, _webglContext.RGBA, _webglContext.RGBA, _webglContext.UNSIGNED_BYTE, bulletScreenOnScreen.hideCanvas);\r\n            bulletScreenOnScreen.texture2D = texture;\r\n        }\r\n\r\n        let _setSize = this.setSize;\r\n        /**\r\n         * 设置尺寸\r\n         * @override\r\n         */\r\n        this.setSize = function () {\r\n            _setSize();\r\n            _webglContext.viewport(0, 0, _canvas.width, _canvas.height);\r\n            _webglContext.uniform2f(_resolutionUniformLocation, _canvas.width, _canvas.height); // 设置全局变量 分辨率\r\n        }\r\n\r\n        /**\r\n         * 初始化\r\n         */\r\n        function init() {\r\n            // 创建着色器方法，输入参数：渲染上下文，着色器类型，数据源\r\n            let createShader = function (gl, type, source) {\r\n                let shader = gl.createShader(type); // 创建着色器对象\r\n                gl.shaderSource(shader, source); // 提供数据源\r\n                gl.compileShader(shader); // 编译 -> 生成着色器\r\n                let success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n                if (success) {\r\n                    return shader;\r\n                }\r\n                gl.deleteShader(shader);\r\n            };\r\n            // 创建着色程序，输入参数：渲染上下文，顶点着色器，片段着色器\r\n            let createProgram = function (gl, vertexShader, fragmentShader) {\r\n                let program = gl.createProgram();\r\n                gl.attachShader(program, vertexShader);\r\n                gl.attachShader(program, fragmentShader);\r\n                gl.linkProgram(program);\r\n                let success = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n                if (success) {\r\n                    return program;\r\n                }\r\n                gl.deleteProgram(program);\r\n            };\r\n            //顶点着色器代码\r\n            let vertexShaderSource = 'attribute vec2 a_position;';\r\n            vertexShaderSource += 'attribute vec2 a_texcoord;';\r\n            vertexShaderSource += 'uniform vec2 u_resolution;';\r\n            vertexShaderSource += 'varying vec2 v_texcoord;';\r\n            vertexShaderSource += 'void main() {';\r\n            // 从像素坐标转换到 0.0 到 1.0\r\n            vertexShaderSource += 'vec2 zeroToOne = a_position / u_resolution;';\r\n            // 再把 0->1 转换 0->2\r\n            vertexShaderSource += 'vec2 zeroToTwo = zeroToOne * 2.0;';\r\n            // 把 0->2 转换到 -1->+1 (裁剪空间)\r\n            vertexShaderSource += 'vec2 clipSpace = zeroToTwo - 1.0;';\r\n            vertexShaderSource += 'gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);';\r\n            // 传递纹理坐标到片断着色器\r\n            vertexShaderSource += 'v_texcoord = a_texcoord;';\r\n            vertexShaderSource += '}';\r\n            //片段着色器代码\r\n            let fragmentShaderSource = 'precision mediump float;';\r\n            // 从顶点着色器中传入的值\r\n            fragmentShaderSource += 'varying vec2 v_texcoord;';\r\n            // 纹理\r\n            fragmentShaderSource += 'uniform sampler2D u_texture;';\r\n            fragmentShaderSource += 'void main() {';\r\n            fragmentShaderSource += 'gl_FragColor = texture2D(u_texture, v_texcoord);';\r\n            fragmentShaderSource += '}';\r\n            _webglContext = _canvas.getContext('webgl');\r\n            _webglContext.enable(_webglContext.BLEND); //开启混合功能\r\n            _webglContext.clearColor(0, 0, 0, 0); //设置清除颜色\r\n            _webglContext.blendFunc(_webglContext.SRC_ALPHA, _webglContext.ONE_MINUS_SRC_ALPHA);\r\n            let vertexShader = createShader(_webglContext, _webglContext.VERTEX_SHADER, vertexShaderSource); //创建顶点着色器\r\n            let fragmentShader = createShader(_webglContext, _webglContext.FRAGMENT_SHADER, fragmentShaderSource); //创建片段着色器\r\n            let program = createProgram(_webglContext, vertexShader, fragmentShader); //创建着色程序\r\n            _webglContext.useProgram(program);\r\n            _positionAttributeLocation = _webglContext.getAttribLocation(program, 'a_position');\r\n            let texcoordAttributeLocation = _webglContext.getAttribLocation(program, 'a_texcoord');\r\n            _resolutionUniformLocation = _webglContext.getUniformLocation(program, 'u_resolution');\r\n            _webglContext.viewport(0, 0, _canvas.width, _canvas.height);\r\n            _webglContext.uniform2f(_resolutionUniformLocation, _canvas.width, _canvas.height); // 设置全局变量 分辨率\r\n            //绑定范围\r\n            let texcoordBuffer = _webglContext.createBuffer();\r\n            // 将绑定点绑定到缓冲数据（texcoordBuffer）\r\n            _webglContext.bindBuffer(_webglContext.ARRAY_BUFFER, texcoordBuffer);\r\n            _webglContext.enableVertexAttribArray(texcoordAttributeLocation);\r\n            // 以浮点型格式传递纹理坐标\r\n            _webglContext.vertexAttribPointer(texcoordAttributeLocation, 2, //size 每次迭代运行提取两个单位数据\r\n                _webglContext.FLOAT, //type 每个单位的数据类型是32位浮点型\r\n                false, //normalize 不需要归一化数据 \r\n                0, //stride 0 = 移动单位数量 * 每个单位占用内存（sizeof(type)）\r\n                // 每次迭代运行运动多少内存到下一个数据开始点\r\n                0 //offset 从缓冲起始位置开始读取\r\n            );\r\n            _webglContext.bufferData(_webglContext.ARRAY_BUFFER, new Float32Array([0, 0,\r\n                1, 0,\r\n                0, 1,\r\n                0, 1,\r\n                1, 0,\r\n                1, 1]), _webglContext.STATIC_DRAW);\r\n        }\r\n\r\n        /**\r\n         * 浏览器支持检测\r\n         * @throws {openBSE.BrowserNotSupportError} 浏览器不支持特定渲染模式时引发错误\r\n         */\r\n        function supportCheck() {\r\n            let canvas = document.createElement('canvas'); //canvas对象\r\n            if (typeof canvas.getContext != 'function') throw new BrowserNotSupportError('Canvas');\r\n            let context = canvas.getContext('2d');\r\n            if (context === null) throw new BrowserNotSupportError('Canvas 2D');\r\n            if (typeof context.fillText != 'function') throw new BrowserNotSupportError('Canvas 2D fillText Function');\r\n            canvas = document.createElement('canvas'); //canvas对象\r\n            context = canvas.getContext('webgl');\r\n            if (context === null) throw new BrowserNotSupportError('WebGL');\r\n        }\r\n    }\r\n}\r\n\r\nexport { WebGLRenderer };","import { Helper } from './lib/helper'\r\nconst BUILD = require('../build.json');\r\nBUILD.buildDate = require('./buildDate.json').buildDate;\r\n\r\n/**\r\n * openBSE 根命名空间\r\n * @namespace\r\n */\r\nlet openBSE = {\r\n    BulletScreenEngine: require('./bulletScreenEngine').BulletScreenEngine,\r\n    BrowserNotSupportError: require('./browserNotSupportError').BrowserNotSupportError,\r\n    BulletScreenType: require('./bulletScreenType').BulletScreenType,\r\n    /**\r\n     * 获取版本信息。\r\n     * @returns {openBSE~VersionInfo} 版本信息：一个 {@link openBSE~VersionInfo} 结构。\r\n     */\r\n    getVersion: function () {\r\n        return Helper.clone(BUILD);\r\n    }\r\n}\r\n\r\nexport { openBSE }\r\n\r\n/**\r\n * 全局选项\r\n * @typedef {object} openBSE~Options\r\n * @description Option 结构用于存放全局选项。\r\n * @property {number} [verticalInterval=8] - 弹幕垂直行间距\r\n * @property {number} [verticalInterval=1] - 弹幕播放速度（倍数）\r\n * @property {openBSE~clockCallback} [clock=time => new Date().getTime() - startTime] - 时间基准：此时间基准可指向一个方法用于获取播放器当前进度，这个方法返回值即为播放进度（单位：毫秒）。\r\n * @property {number} [scaling=1] 弹幕缩放比例（倍数）\r\n * @property {openBSE~BulletScreenStyle} [defaultStyle] 默认弹幕样式：一个 {@link openBSE~BulletScreenStyle} 结构。\r\n * @property {openBSE.BulletScreenType} [hiddenTypes=0] 隐藏的弹幕类型：一个 {@link openBSE.BulletScreenType} 枚举。将要隐藏的弹幕类型相加，0为不隐藏任何类型的弹幕。\r\n * @property {number} [opacity=1.0] 弹幕不透明度：取值范围 0.0 到 1.0，0.0 全透明；1.0 不透明。\r\n */\r\n\r\n/**\r\n * 时间基准回调方法\r\n * @callback openBSE~clockCallback\r\n * @description ClockCallback 回调方法用于播放器当前进度。\r\n * @returns {number} 播放进度：单位：毫秒。\r\n */\r\n\r\n/**\r\n * 单条弹幕数据\r\n * @typedef {object} openBSE~BulletScreen\r\n * @description BulletScreen 结构用于存放单条弹幕数据。\r\n * @property {string} text 弹幕文本\r\n * @property {boolean} [canDiscard=true] 是否允许丢弃：在弹幕过多时，程序将自动丢弃一些延迟过高的弹幕。此选项为 false 时本条弹幕无论如何都不会被丢弃，使用本选项的场景如本用户发送的弹幕。（注意：不要将太多的弹幕的 canDiscard 设为 false， 否则会因超时的弹幕不会被丢弃而造成意外的问题。）\r\n * @property {number} [startTime=options.clock()] 弹幕进入时间：单位：毫秒，默认为[时间基准（options.clock）]{@link openBSE~Options}当前时间。\r\n * @property {openBSE.BulletScreenType} [type=openBSE.BulletScreenType.rightToLeft] 弹幕类型：一个类型为 {@link openBSE.BulletScreenType} 的枚举。\r\n * @property {openBSE~BulletScreenStyle} style 弹幕样式：一个 {@link openBSE~BulletScreenStyle} 结构。设置此选项中的任何一个值，将覆盖对应的全局设置。\r\n * @property {any} more... 其他自定义字段：例如 uuid 、 id 等。（注意：因为在事件响应方法中返回的弹幕对象是原对象克隆的，所以无法直接比较，必须使用自定义字段唯一标识一条弹幕。）\r\n */\r\n\r\n/**\r\n * 弹幕样式\r\n * @typedef {object} openBSE~BulletScreenStyle\r\n * @description BulletScreenStyle 结构用于存放弹幕样式信息。\r\n * @property {number} [shadowBlur=2] 弹幕阴影的模糊级别：0为不显示阴影。\r\n * @property {string} [fontWeight=\"600\"] 字体粗细：可选值：lighter：更细；normal：标准；bold：粗体；bolder: 更粗；100、200、300、400、500、600、700、800、900：定义由粗到细的字符（400 等同于 normal；700 等同于 bold）。\r\n * @property {string} [fontFamily=\"sans-serif\"] 字体系列：弹幕的字体族名称或/及类族名称的一个优先表。（注意：如果使用了用“@font-face”定义的字体，请确保在使用前完全加载完成，否则弹幕可能无法显示。如果要预加载这些字体，建议使用 [Web Font Loader]{@link https://github.com/typekit/webfontloader} 。）\r\n * @property {number} [size=19] 字体大小：单位：像素。\r\n * @property {string} [boxColor] 外框颜色：参照CSS颜色设置方法，为 null 不显示外框。\r\n * @property {string} [color=\"white\"] 弹幕颜色：参照CSS颜色设置方法，为 null 不显示此弹幕。\r\n * @property {string} [borderColor] 描边颜色：参照CSS颜色设置方法，为 null 没有描边。\r\n * @property {number} [speed=0.15] 弹幕速度：单位：像素/毫秒，仅弹幕类型为0、1时有效。\r\n * @property {number} [residenceTime=5000] 弹幕停留时间：单位：毫秒，仅弹幕类型2、3时有效。\r\n */\r\n\r\n/**\r\n * 调试信息\r\n * @typedef {object} openBSE~DebugInfo\r\n * @description DebugInfo 结构用于存放调试信息。\r\n * @property {number} time [时间基准（options.clock）]{@link openBSE~Options}当前时间。\r\n * @property {number} bulletScreensOnScreenCount 实时弹幕总数\r\n * @property {number} bulletScreensCount 剩余弹幕总数\r\n * @property {number} delay 延迟：单位：毫秒。\r\n * @property {number} delayBulletScreensCount 丢弃弹幕数：因延迟过高而丢弃的弹幕总数。\r\n * @property {number} fps 帧频：单位：帧/秒。\r\n */\r\n\r\n/**\r\n * 版本信息\r\n * @typedef {object} openBSE~VersionInfo\r\n * @description VersionInfo 结构用于存放版本信息。\r\n * @property {string} version 版本号\r\n * @property {string} buildDate 构建日期：时区：UTC。\r\n */"]}